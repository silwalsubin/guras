name: Database Migrations via CodeBuild

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run migrations against'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      dry_run:
        description: 'Dry run (validate only)'
        required: false
        default: false
        type: boolean

env:
  AWS_REGION: "us-east-1"

jobs:
  trigger-codebuild:
    name: Trigger CodeBuild Migration
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup GitHub Source Credentials
      run: |
        echo "Setting up GitHub source credentials for CodeBuild..."
        echo "Using AWS region: ${{ env.AWS_REGION }}"
        
        # Create source credentials with explicit region
        echo "Creating source credentials for Bitbucket..."
        aws codebuild import-source-credentials \
          --region ${{ env.AWS_REGION }} \
          --server-type BITBUCKET \
          --auth-type PERSONAL_ACCESS_TOKEN \
          --token "${{ secrets.GITHUB_TOKEN }}" \
          --should-overwrite || true
        
        # Verify credentials were created
        echo "Verifying source credentials..."
        aws codebuild list-source-credentials --region ${{ env.AWS_REGION }} | grep -E "(BITBUCKET|PERSONAL_ACCESS_TOKEN)" || echo "Warning: Could not list source credentials"
        
        echo "✅ Source credentials created/updated successfully"
        
    - name: Start CodeBuild migration
      run: |
        ENVIRONMENT="${{ github.event.inputs.environment || 'staging' }}"
        PROJECT_NAME="guras-database-migrations"
        
        echo "Starting CodeBuild migration for $ENVIRONMENT environment..."
        
        # Debug: Check if source credentials exist
        echo "Checking source credentials before starting CodeBuild..."
        aws codebuild list-source-credentials --region ${{ env.AWS_REGION }} || echo "Warning: Could not list source credentials"
        
        # Create environment variables JSON file
        cat > env-vars.json << EOF
        [
          {
            "name": "ENVIRONMENT",
            "value": "$ENVIRONMENT",
            "type": "PLAINTEXT"
          }
        ]
        EOF
        
        # Start the CodeBuild project
        BUILD_ID=$(aws codebuild start-build \
          --project-name "$PROJECT_NAME" \
          --environment-variables-override file://env-vars.json \
          --query 'build.id' \
          --output text)
        
        echo "CodeBuild started with ID: $BUILD_ID"
        
        # Wait for build to complete by polling
        echo "Waiting for build to complete..."
        while true; do
          BUILD_STATUS=$(aws codebuild batch-get-builds --ids "$BUILD_ID" --query 'builds[0].buildStatus' --output text)
          echo "Current build status: $BUILD_STATUS"
          
          if [ "$BUILD_STATUS" = "SUCCEEDED" ] || [ "$BUILD_STATUS" = "FAILED" ] || [ "$BUILD_STATUS" = "STOPPED" ]; then
            break
          fi
          
          echo "Build still in progress, waiting 30 seconds..."
          sleep 30
        done
        
        if [ "$BUILD_STATUS" = "SUCCEEDED" ]; then
          echo "✅ Database migration completed successfully!"
        else
          echo "❌ Database migration failed with status: $BUILD_STATUS"
          exit 1
        fi


