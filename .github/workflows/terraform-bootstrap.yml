name: Terraform Bootstrap

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
      auto_approve:
        description: 'Auto approve changes (use with caution)'
        required: false
        default: false
        type: boolean

env:
  TF_VERSION: "1.5.0"
  AWS_REGION: "us-east-1"

jobs:
  validate:
    name: Validate Bootstrap Configuration
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Format Check
      run: |
        cd iac/terraform/bootstrap
        terraform fmt -check || echo "Format check completed"

    - name: Terraform Init
      run: |
        cd iac/terraform/bootstrap
        terraform init

    - name: Terraform Validate
      run: |
        cd iac/terraform/bootstrap
        terraform validate

  plan:
    name: Plan Bootstrap Changes
    runs-on: ubuntu-latest
    needs: validate
    if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: |
        cd iac/terraform/bootstrap
        terraform init

    - name: Terraform Plan
      id: plan
      run: |
        cd iac/terraform/bootstrap
        terraform plan -out=tfplan
        terraform show -no-color tfplan > plan.txt
      continue-on-error: true

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: bootstrap-plan
        path: iac/terraform/bootstrap/plan.txt

  apply:
    name: Apply Bootstrap Changes
    runs-on: ubuntu-latest
    needs: plan
    if: github.event.inputs.action == 'apply'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: |
        cd iac/terraform/bootstrap
        terraform init

    - name: Terraform Apply
      run: |
        cd iac/terraform/bootstrap
        terraform apply -auto-approve

    - name: Get Bootstrap Outputs
      id: bootstrap-outputs
      run: |
        cd iac/terraform/bootstrap
        echo "staging_bucket=$(terraform output -raw staging_state_bucket)" >> $GITHUB_OUTPUT
        echo "production_bucket=$(terraform output -raw production_state_bucket)" >> $GITHUB_OUTPUT
        echo "dynamodb_table=$(terraform output -raw dynamodb_table)" >> $GITHUB_OUTPUT